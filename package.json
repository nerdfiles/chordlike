{
  "name": "chordlike",
  "version": "0.0.0-novel.0",
  "description": "chordlikes",
  "private": true,
  "author": "aha <patagnome@protonmail.com>",
  "license": "WTFPL",
  "jest": {
    "coverageReporters": [
      "json",
      "lcov",
      "html"
    ]
  },
  "dependencies": {
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "pryjs": "^1.0.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "$start": "npm run start",
    "build": "react-scripts build",
    "$build": "npm run build",
    "test": "react-scripts test",
    "$test": "npm run test",
    "eject": "react-scripts eject",
    "$eject": "npm run eject",
    "$publish": "cd build && echo 'sleepy-operation.surge.sh' > CNAME && surge .",
    "$test:coverage": "CI=true npm test -- --env=jsdom --coverage",
    "#open": "vim $(ack '@' src -l | percol)",
    "#report": "./node_modules/.bin/es6-plato -r -e .eslintrc.backup -d report/complexity src/**/**/*.js",
    "$publish:coverage": "rm -rf build/report/coverage && mkdir -p build/report && cp -R coverage build/report/ && npm run '$publish'",
    "$publish:report": "rm -rf build/report/complexity && mkdir -p build/report && cp -R report/complexity build/report/ && npm run '$publish'",
    "#help": "npm run $(echo \"$(npm run)\" | percol)",
    "#install/ack": "brew install ack",
    "#install/percol": "brew install percol",
    "#install/surge": "npm install -g surge "
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "es6-plato": "^1.2.3",
    "jest-html-reporter": "^3.7.0"
  }
}
